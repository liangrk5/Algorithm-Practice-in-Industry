name: Daily ArXiv Search-Ads-Rec Papers

env:
  PYTHON_VERSION: "3.12" # set this to the Python version to use
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  workflow_dispatch:  # 允许手动触发
  schedule:
    - cron: '0 2 * * *' # 每天 UTC 时间 2:00 触发, 即北京时间10点

jobs:
  daily-push:
    runs-on: ubuntu-latest
    env:
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      MODEL_TYPE: ${{ secrets.MODEL_TYPE || 'Gemini' }}
      QUERY: ${{ secrets.ARXIV_QUERY || 'cs.IR,cs.AI,cs.CL' }}
      LIMITS: ${{ secrets.ARXIV_LIMITS || '50' }}
      SERVERCHAN_API_KEY: ${{ secrets.SERVERCHAN_API_KEY }}
      FEISHU_URL: ${{ secrets.FEISHU_URL }}
      DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
      CAIYUN_TOKEN: ${{ secrets.CAIYUN_TOKEN }}

    permissions:
      issues: write
      contents: write

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python version
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests tqdm openai
          pip install -q -U google-generativeai

      - name: Create initial arxiv.json if needed
        run: |
          if [ ! -f "arxiv.json" ]; then
            echo "[]" > arxiv.json
          fi

      - name: Fetch and filter arXiv papers
        run: python arxiv.py
        
      - name: Commit changes to arxiv.json
        id: commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions"
          git add --all
          if [ -z "$(git status --porcelain)" ]; then
             echo "push=false" >> $GITHUB_OUTPUT
          else
             git commit -m "chore: update arxiv paper cache" -a
             echo "push=true" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Push changes
        if: steps.commit.outputs.push == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}